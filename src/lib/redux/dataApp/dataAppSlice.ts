/* Core */
import { createSlice, type PayloadAction } from '@reduxjs/toolkit'
import { appDataSliceState, ModeData, Overview  } from '../../../model/interfaceData';

/* Instruments */
import { addDataOverViewAsync } from './thunks'

const initialState: appDataSliceState = {
  appData: {
    Overview: {
      Study_Name: "",
      Study_Coordinator:"",
      Study_Coordinator_Contact_Info:"",
      Facility:"",
      Facility_Location:"",
      Facility_Owner:"",
      Overview_Company:"",
      Site:"",
      Plant:"",
      Unit__Group:"",
      Unit:"",
      Sub__Unit:"",
      Report_Number:"",
      Project_Number:"",
      Project_Description:"",
      General_Notes: ""
    }
  },
  status: 'idle',
}

export const dataAppSlice = createSlice({
  name: 'appData',
  initialState,
  reducers: {
    
  addDataOverview: (state, action: PayloadAction<Overview>) => {
      state.appData.Overview = action.payload
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(addDataOverViewAsync.pending, (state) => {
        state.status = 'loading'
      })
      .addCase(addDataOverViewAsync.fulfilled, (state, action) => {
        state.status = 'idle'
        state.appData.Overview = action.payload
      })
  },
})
